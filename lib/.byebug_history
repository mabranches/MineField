c
continue
(@clicked | @bombs)
@clicked.table.value | @bombs.table.value
@clicked.table.value
@clicked.table
(2<<15 )-1
rr.size
rr = (@clicked | @bombs)
(@clicked | @bombs).all_set?
@clicked | @bombs
continue
@clicked | @bombs
@clicked & @bombs
continue
@clicked | @bombs
@clicked & @bombs
@bombs
@clicked
continue
@clicked.print
continue
c
"i=#{i}|j=#{j}"
c
"i=#{i}|j=#{j}"
c
"i=#{i}|j=#{j}"
c
"i=#{i}|j=#{j}"
c
"i=#{i}|j=#{j}"
continue
@clicked.print
continue
@clicked.print
c
@clicked.print
c
@clicked.print
c
@clicked.print
continue
c
continue
c
continue
y
x
continue
bombs_in_vinicity[x][y]
bombs_in_vinicity[x]
y
x
continue
y
x
q
c
"x=#{x}|y=#{y}"
c
"x=#{x}|y=#{y}"
c
"x=#{x}|y=#{y}"
c
"x=#{x}|y=#{y}"
c
y
x
c
@bombs.loop_neighbors(i, j) do |x,y| puts "x=#{x}|y=#{y}" end
c
bombs_in_vinicity[0].length
bombs_in_vinicity.length
@col
@row
c
s
n
s
c
@value == (1 << @size ) - 1
s
n
c
n
s
n
c
@row
bombs_in_vinicity
c
m = board.get_line_mask(s.new(0, 0)) 
#board.get_line_mask(point)                                                                          
#point = s.new(1, 1)                                                                                 
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
q
c
m = board.get_line_mask(s.new(0, 0)) 
#board.get_line_mask(point)                                                                          
#point = s.new(1, 1)                                                                                 
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
 point.i
point.i - pos
n
c
m = board.get_line_mask(s.new(0, 0)) 
#board.get_line_mask(point)                                                                          
#point = s.new(1, 1)                                                                                 
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
point.j - 1
point.i - pos
c
m = board.get_line_mask(s.new(1, 1))
#board.get_line_mask(point)                                                                          
#point = s.new(1, 1)                                                                                 
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
board.get_line_mask(s.new(1, 1))
#board.get_line_mask(point)                                                                          
#point = s.new(1, 1)                                                                                 
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
(0..@col-1).include? 0
(0..@col-1).include? -1
(0..@col-1).include? 7
(0..@col-1).include? 2
(0..@col-1).to_a
(0..@col-1)
(0..(@col-1))
@col
point.i - pos
pos=-1
point.i - pos
( mask << (point.i - pos) * col + point.j - 1).to_s 2
pos=0
( mask << (point.i - pos) * col + point.j - 1).to_s 2
 mask << (point.i - pos) * col + point.j - 1
pos=-1
n
mask.to_s 2
mask
n
s
c
board.get_line_mask(s.new(1, 1)).to_
#board.get_line_mask(point)                                                                          
#point = s.new(1, 1)                                                                                 
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
MASK_ROW
on_border?(point)
s
c
board.get_line_mask(s.new(1, 1))  c
#board.get_line_mask(point)                                                                          
#point = s.new(1, 1)                                                                                 
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
board.get_line_mask(point) 
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
on_border?(point)
point
s
c
mask.to_s 2
mask
n
c
m = board.get_line_mask(point)
board.get_line_mask(point)
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
board.get_line_mask(point)  
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
board.get_line_mask(point)
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
point = s.new(1, 1) 
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
board.get_line_mask(point) 
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
continue
board.get_line_mask(point) 
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
point.i
line.to_s 2
line
n
base_mask.to_s 2
base_mask
n
c
l
board.get_line_mask(point) 
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
board = Board.new(4, 5, 6)                                                                           
point = s.new(1, 1)                                                                                  
s = Struct.new(:i, :j)                                                                               
c
q
